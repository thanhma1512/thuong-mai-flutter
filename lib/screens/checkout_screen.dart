import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import '../providers/cart_provider.dart';
import 'package:intl/intl.dart';
import 'package:qr_flutter/qr_flutter.dart';

class CheckoutScreen extends StatefulWidget {
  @override
  _CheckoutScreenState createState() => _CheckoutScreenState();
}

class _CheckoutScreenState extends State<CheckoutScreen> {
  final _formKey = GlobalKey<FormState>();
  final TextEditingController _nameController = TextEditingController();
  final TextEditingController _phoneController = TextEditingController();
  final TextEditingController _addressController = TextEditingController();
  String _selectedPaymentMethod = "Ship COD"; // üåü M·∫∑c ƒë·ªãnh l√† Ship COD
  bool _showQRCode = false;

  String formatCurrency(double amount) {
    return NumberFormat.currency(locale: 'vi_VN', symbol: '‚Ç´').format(amount);
  }

  /// ‚úÖ X·ª≠ l√Ω x√°c nh·∫≠n ƒë∆°n h√†ng
  void _confirmOrder(BuildContext context, CartProvider cartProvider) {
    if (_formKey.currentState!.validate()) {
      if (_selectedPaymentMethod == "Chuy·ªÉn kho·∫£n ng√¢n h√†ng") {
        setState(() {
          _showQRCode = true;
        });
      } else {
        cartProvider.saveOrder(
          _nameController.text,
          _phoneController.text,
          _addressController.text,
          _selectedPaymentMethod,
        );

        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text("‚úÖ ƒê∆°n h√†ng ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t th√†nh c√¥ng!")),
        );

        Navigator.pop(context);
      }
    }
  }


  /// üè¶ T·∫°o d·ªØ li·ªáu QR Code
  String generateQRCodeData(double amount) {
    return "Ng√¢n h√†ng: Vietcombank\n"
        "S·ªë t√†i kho·∫£n: 0123456789\n"
        "Ch·ªß t√†i kho·∫£n: Nguy·ªÖn VƒÉn A\n"
        "S·ªë ti·ªÅn: ${formatCurrency(amount)}\n"
        "N·ªôi dung: Thanh to√°n ƒë∆°n h√†ng";
  }

  @override
  Widget build(BuildContext context) {
    final cartProvider = Provider.of<CartProvider>(context);
    final cartItems = cartProvider.items.values.toList();

    return Scaffold(
      appBar: AppBar(title: Text("üõçÔ∏è X√°c nh·∫≠n ƒë∆°n h√†ng")),
      body: SingleChildScrollView(
        child: Padding(
          padding: EdgeInsets.all(16),
          child: Column(
            children: [
              // üìù Form nh·∫≠p th√¥ng tin giao h√†ng
              Form(
                key: _formKey,
                child: Column(
                  children: [
                    TextFormField(
                      controller: _nameController,
                      decoration: InputDecoration(labelText: "H·ªç v√† T√™n"),
                      validator: (value) => value!.isEmpty ? "Vui l√≤ng nh·∫≠p t√™n" : null,
                    ),
                    SizedBox(height: 10),
                    TextFormField(
                      controller: _phoneController,
                      keyboardType: TextInputType.phone,
                      decoration: InputDecoration(labelText: "S·ªë ƒëi·ªán tho·∫°i"),
                      validator: (value) => value!.isEmpty ? "Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i" : null,
                    ),
                    SizedBox(height: 10),
                    TextFormField(
                      controller: _addressController,
                      decoration: InputDecoration(labelText: "ƒê·ªãa ch·ªâ giao h√†ng"),
                      validator: (value) => value!.isEmpty ? "Vui l√≤ng nh·∫≠p ƒë·ªãa ch·ªâ" : null,
                    ),
                    SizedBox(height: 10),
                    // üí≥ Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n
                    DropdownButtonFormField<String>(
                      value: _selectedPaymentMethod,
                      items: ["Ship COD", "Chuy·ªÉn kho·∫£n ng√¢n h√†ng"].map((method) {
                        return DropdownMenuItem(value: method, child: Text(method));
                      }).toList(),
                      onChanged: (value) {
                        setState(() {
                          _selectedPaymentMethod = value!;
                          _showQRCode = (value == "Chuy·ªÉn kho·∫£n ng√¢n h√†ng"); // üåü C·∫≠p nh·∫≠t tr·∫°ng th√°i QR Code
                        });
                      },
                      decoration: InputDecoration(labelText: "Ph∆∞∆°ng th·ª©c thanh to√°n"),
                    ),
                    SizedBox(height: 20),
                  ],
                ),
              ),
              Divider(),
              // üì¶ Danh s√°ch s·∫£n ph·∫©m
              Text(
                "üõí S·∫£n ph·∫©m trong ƒë∆°n h√†ng",
                style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
              ),
              SizedBox(height: 10),
              Column(
                children: cartItems.map((item) {
                  return Card(
                    margin: EdgeInsets.symmetric(vertical: 8),
                    shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),
                    elevation: 4,
                    child: ListTile(
                      leading: Image.network(
                        item.imageUrl,
                        width: 50,
                        height: 50,
                        fit: BoxFit.cover,
                        errorBuilder: (context, error, stackTrace) =>
                            Icon(Icons.image_not_supported, size: 50, color: Colors.grey),
                      ),
                      title: Text(item.name, style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),
                      subtitle: Text("S·ªë l∆∞·ª£ng: ${item.quantity}"),
                      trailing: Text(
                        formatCurrency(item.price * item.quantity),
                        style: TextStyle(fontSize: 16, color: Colors.green, fontWeight: FontWeight.bold),
                      ),
                    ),
                  );
                }).toList(),
              ),
              Divider(),
              // üí∞ T·ªïng ti·ªÅn
              Text(
                "T·ªïng ti·ªÅn: ${formatCurrency(cartProvider.totalAmount)}",
                style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
              ),
              SizedBox(height: 10),

              // üî• Hi·ªÉn th·ªã QR Code n·∫øu ch·ªçn "Chuy·ªÉn kho·∫£n ng√¢n h√†ng"
              if (_showQRCode)
                Column(
                  children: [
                    Text("üîπ Qu√©t m√£ QR ƒë·ªÉ thanh to√°n:", style: TextStyle(fontSize: 16)),
                    SizedBox(height: 10),
                    QrImageView(
                      data: generateQRCodeData(cartProvider.totalAmount),
                      version: QrVersions.auto,
                      size: 200,
                    ),
                    SizedBox(height: 10),
                    ElevatedButton(
                      onPressed: () {
                        ScaffoldMessenger.of(context).showSnackBar(
                          SnackBar(content: Text("‚úÖ Thanh to√°n th√†nh c√¥ng!")),
                        );
                        cartProvider.clearCart();
                        Navigator.pop(context);
                      },
                      style: ElevatedButton.styleFrom(
                        backgroundColor: Colors.green,
                        padding: EdgeInsets.symmetric(vertical: 14),
                      ),
                      child: Text(
                        "‚úÖ X√°c nh·∫≠n ƒë√£ thanh to√°n",
                        style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
                      ),
                    ),
                  ],
                ),

              // üîò N√∫t x√°c nh·∫≠n thanh to√°n
              if (!_showQRCode)
                SizedBox(
                  width: double.infinity,
                  child: ElevatedButton(
                    onPressed: () => _confirmOrder(context, cartProvider),
                    style: ElevatedButton.styleFrom(
                      backgroundColor: Colors.green,
                      padding: EdgeInsets.symmetric(vertical: 14),
                    ),
                    child: Text(
                      "üéâ X√°c nh·∫≠n ƒë·∫∑t h√†ng",
                      style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
                    ),
                  ),
                ),
            ],
          ),
        ),
      ),
    );
  }
}
